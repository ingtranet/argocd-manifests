apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: superset
  namespace: argocd
spec:
  project: default
  source:
    chart: superset
    repoURL: https://apache.github.io/superset
    targetRevision: 0.6.1
    helm:
      releaseName: superset
      values: |
        image:
          repository: harbor.ingtra.net/dockerhub/apache/superset
          tag: 1.5.0
        initImage:
          repository: harbor.ingtra.net/dockerhub/library/busybox
        supersetNode:
          initContainers: []
        supersetWorker:
          initContainers: []
        init:
          initContainers: []
        bootstrapScript: |
          #!/bin/bash
          rm -rf /var/lib/apt/lists/* && \
          pip install \
            trino[sqlalchemy]==0.313.0 \
          && \
          if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid {{ .Values.runAsUser }}" > ~/bootstrap; fi
        configOverrides:
          useCustomConnections: |
            SQLALCHEMY_DATABASE_URI = 'mysql://superset:superset@mysql.mdc.ingtra.net/superset'
            class CeleryConfig(object):
              CELERY_IMPORTS = ('superset.sql_lab', )
              CELERY_ANNOTATIONS = {'tasks.add': {'rate_limit': '10/s'}}
              BROKER_URL = 'redis://redis.mdc.ingtra.net:6379/2'
              CELERY_RESULT_BACKEND = 'redis://redis.mdc.ingtra.net:6379/2'
            CACHE_CONFIG = {
              'CACHE_TYPE': 'RedisCache',
              'CACHE_DEFAULT_TIMEOUT': 300,
              'CACHE_KEY_PREFIX': 'superset_cache_',
              'CACHE_REDIS_HOST': 'redis.mdc.ingtra.net',
              'CACHE_REDIS_PORT': 6379,
              'CACHE_REDIS_DB': 2
            }
            DATA_CACHE_CONFIG = CACHE_CONFIG
            FILTER_STATE_CACHE_CONFIG = CACHE_CONFIG
            EXPLORE_FORM_DATA_CACHE_CONFIG = CACHE_CONFIG
            RESULTS_BACKEND = RedisCache(
              host='redis.mdc.ingtra.net',
              port=6379,
              key_prefix='superset_results_'
            )
        postgresql:
          enabled: false
        redis:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: superset

