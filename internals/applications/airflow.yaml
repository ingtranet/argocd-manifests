apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: airflow
  namespace: argocd
spec:
  project: default
  source:
    chart: airflow
    repoURL: https://airflow.apache.org
    targetRevision: 1.5.0
    helm:
      releaseName: airflow
      values: |
        defaultAirflowRepository: harbor.ingtra.net/dockerhub/apache/airflow
        executor: "KubernetesExecutor"
        dags:
          gitSync:
            enabled: true
            repo: https://github.com/ingtranet/airflow-dags.git
            branch: master
            rev: HEAD
            depth: 1
            subPath: dags
            wait: 300
        data:
          metadataConnection:
            user: airflow
            pass: airflow
            protocol: mysql
            host: mysql.mdc.ingtra.net
            port: 3306
            db: airflow
            sslmode: disable
        createUserJob:
          useHelmHooks: false
        migrateDatabaseJob:
          useHelmHooks: false
        postgresql:
          enabled: false
        statsd:
          enabled: true
        webserver:
          webserverConfig: |
            AUTH_ROLE_PUBLIC = 'Admin'
        elasticsearch:
          enabled: true
          connection:
            host: elasticsearch.mdc.ingtra.net
            port: 9200
        config:
          core:
            dags_folder: '{{ include "airflow_dags" . }}'
            # This is ignored when used with the official Docker image
            load_examples: 'False'
            executor: '{{ .Values.executor }}'
            # For Airflow 1.10, backward compatibility; moved to [logging] in 2.0
            colored_console_log: 'False'
            remote_logging: '{{- ternary "True" "False" .Values.elasticsearch.enabled }}'
          logging:
            remote_logging: '{{- ternary "True" "False" .Values.elasticsearch.enabled }}'
            colored_console_log: 'False'
            level: DEBUG
          metrics:
            statsd_on: '{{ ternary "True" "False" .Values.statsd.enabled }}'
            statsd_port: 9125
            statsd_prefix: airflow
            statsd_host: '{{ printf "%s-statsd" .Release.Name }}'
          webserver:
            enable_proxy_fix: 'True'
            # For Airflow 1.10
            rbac: 'True'
          celery:
            worker_concurrency: 16
          scheduler:
            # statsd params included for Airflow 1.10 backward compatibility; moved to [metrics] in 2.0
            statsd_on: '{{ ternary "True" "False" .Values.statsd.enabled }}'
            statsd_port: 9125
            statsd_prefix: airflow
            statsd_host: '{{ printf "%s-statsd" .Release.Name }}'
            # `run_duration` included for Airflow 1.10 backward compatibility; removed in 2.0.
            run_duration: 41460
          elasticsearch:
            json_format: 'True'
            log_id_template: "{dag_id}_{task_id}_{execution_date}_{try_number}"
          elasticsearch_configs:
            max_retries: 3
            timeout: 30
            retry_timeout: 'True'
          kerberos:
            keytab: '{{ .Values.kerberos.keytabPath }}'
            reinit_frequency: '{{ .Values.kerberos.reinitFrequency }}'
            principal: '{{ .Values.kerberos.principal }}'
            ccache: '{{ .Values.kerberos.ccacheMountPath }}/{{ .Values.kerberos.ccacheFileName }}'
          celery_kubernetes_executor:
            kubernetes_queue: 'kubernetes'
          kubernetes:
            namespace: '{{ .Release.Namespace }}'
            airflow_configmap: '{{ include "airflow_config" . }}'
            airflow_local_settings_configmap: '{{ include "airflow_config" . }}'
            pod_template_file: '{{ include "airflow_pod_template_file" . }}/pod_template_file.yaml'
            worker_container_repository: '{{ .Values.images.airflow.repository | default .Values.defaultAirflowRepository }}'
            worker_container_tag: '{{ .Values.images.airflow.tag | default .Values.defaultAirflowTag }}'
            multi_namespace_mode: '{{ if .Values.multiNamespaceMode }}True{{ else }}False{{ end }}'
  destination:
    server: https://kubernetes.default.svc
    namespace: airflow
