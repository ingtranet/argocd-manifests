apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: trino
  namespace: argocd
spec:
  project: default
  source:
    #chart: trino
    #repoURL: https://trinodb.github.io/charts
    #targetRevision: 0.7.0
    repoURL: https://github.com/trinodb/charts.git
    path: charts/trino
    targetRevision: main
    helm:
      releaseName: trino
      values: |
        image:
          repository: harbor.ingtra.net/dockerhub/trinodb/trino
          tag: "402"
        server:
          workers: 3
          coordinatorExtraConfig: |
            web-ui.user=admin
            web-ui.authentication.type=fixed
          config:
            query:
              maxMemory: 10GB
              maxMemoryPerNode: 2GB
            memory:
              heapHeadroomPerNode: 1GB
        coordinator:
          jvm:
            maxHeapSize: 3G
            gcMethod:
              type: UseShenandoahGC
          additionalJVMConfig: []
          #  - "-XX:ShenandoahGCHeuristics=compact"
          resources:
            requests:
              cpu: 0.1
            limits:
              cpu: 2
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
        worker:
          jvm:
            maxHeapSize: 3G
            gcMethod:
              type: UseShenandoahGC
          additionalJVMConfig: []
          #  - "-XX:ShenandoahGCHeuristics=compact"
          resources:
            requests:
              cpu: 0.1
            limits:
              cpu: 5
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: component
                        operator: In
                        values: ["worker"]
                  topologyKey: "kubernetes.io/hostname"
        additionalCatalogs:
          iceberg: |
            connector.name=iceberg
            hive.metastore.uri=thrift://hive-metastore.mdc.ingtra.net:9083
            hive.s3.aws-access-key=trino
            hive.s3.aws-secret-key=trinouser
            hive.s3.endpoint=http://minio.mdc.ingtra.net
            hive.s3.ssl.enabled=false
          postgresql: |
            connector.name=postgresql
            connection-url=jdbc:postgresql://postgresql.mdc.ingtra.net:5432/postgres
            connection-user=trino
            connection-password=trino
            decimal-mapping=allow_overflow
            decimal-default-scale=16
        additionalConfigProperties:
          - sql.default-catalog=iceberg
          - spill-enabled=true
          - spiller-spill-path=/tmp
          - spill-compression-enabled=false
          - query-max-spill-per-node=30GB
          - query.max-total-memory=30GB
          - query.client.timeout=20m
          - task.concurrency=4
          - task.max-worker-threads=8
  destination:
    server: https://kubernetes.default.svc
    namespace: trino
