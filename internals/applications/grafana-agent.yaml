apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-agent
  namespace: argocd
spec:
  project: default
  source:
    chart: grafana-agent
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 0.31.1
    helm:
      releaseName: grafana-agent
      values: |
        agent:
          configMap:
            content: |
              prometheus.remote_write "victoria_metrics" {
                endpoint {
                  url = "http://victoria-metrics.sd.ingtra.net:8428/api/v1/write"
                }
              }

              discovery.kubernetes "node" {
                role = "node"
              }

              discovery.kubernetes "pod" {
                role = "pod"
              }

              discovery.relabel "cadvisor" {
                targets = discovery.kubernetes.node.targets
                rule {
                  replacement   = "/metrics/cadvisor"
                  target_label  = "__metrics_path__"
                }
              }

              prometheus.scrape "kubelet" {
                clustering {
                  enabled = true
                }
                scrape_interval = "15s"
                scrape_timeout  = "14s"
                targets  = discovery.kubernetes.node.targets
                scheme   = "https"
                bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"
                tls_config {
                  insecure_skip_verify = true
                }
                forward_to = [prometheus.remote_write.victoria_metrics.receiver]
              }

              prometheus.scrape "cadvisor" {
                clustering {
                  enabled = true
                }
                scrape_interval = "15s"
                scrape_timeout  = "14s"
                targets  = discovery.relabel.cadvisor.output
                scheme   = "https"
                bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"
                tls_config {
                  insecure_skip_verify = true
                }
                forward_to = [prometheus.remote_write.victoria_metrics.receiver]
              }

              prometheus.scrape "pod" {
                clustering {
                  enabled = true
                }
                scrape_interval = "15s"
                scrape_timeout  = "14s"
                targets    = discovery.kubernetes.pod.targets
                forward_to = [prometheus.remote_write.victoria_metrics.receiver]
              }
          
              prometheus.scrape "external" {
                clustering {
                  enabled = true
                }
                scrape_interval = "15s"
                scrape_timeout  = "14s"
                targets = [
                  {
                    __address__ = "victoria-metrics.sd.ingtra.net:8428",
                    __metrics_path__ = "/metrics",
                  },
                ]
                forward_to = [prometheus.remote_write.victoria_metrics.receiver]
              }
          clustering:
            enabled: true
          enableReporting: false
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 100Mi
        controller:
          type: deployment
  destination:
    server: https://kubernetes.default.svc
    namespace: grafana-agent
